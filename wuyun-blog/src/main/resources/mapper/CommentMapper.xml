<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wuyun.mapper.CommentMapper">
    <select id="countComment" resultType="java.lang.Long">
        SELECT count(c.id)
        FROM b_comment c
        LEFT JOIN b_user u ON c.from_uid = u.id
        <where>
            <if test="condition.commentType != null">
                c.comment_type = #{condition.commentType}
            </if>
            <if test="condition.keyword != null and condition.keyword != ''">
                and u.nickname like concat('%',#{condition.keyword},'%')
            </if>
            <if test="condition.isCheck != null">
                and c.is_check = #{condition.isCheck}
            </if>
        </where>
    </select>

    <select id="listCommentBackVO" resultType="com.wuyun.model.vo.CommentBackVO">
        SELECT c.id,
               u.avatar,
               u.nickname AS from_nickname,
               r.nickname AS to_nickname,
               a.article_title,
               c.comment_content,
               c.comment_type,
               c.is_check,
               c.create_time
        FROM b_comment c
        LEFT JOIN b_article a ON c.type_id = a.id
        LEFT JOIN b_user u ON c.from_uid = u.id
        LEFT JOIN b_user r ON c.to_uid = r.id
        <where>
            <if test="condition.commentType != null">
                c.comment_type=#{condition.commentType}
            </if>
            <if test="condition.keyword != null and condition.keyword != ''">
                AND u.nickname LIKE concat('%',#{condition.keyword},'%')
            </if>
            <if test="condition.isCheck != null">
                AND c.is_check = #{condition.isCheck}
            </if>
        </where>
        ORDER BY c.id DESC
        LIMIT #{limit},#{size}
    </select>


    <select id="selectRecentComment" resultType="com.wuyun.model.vo.RecentCommentVO">
        SELECT c.id,
               u.nickname,
               avatar,
               comment_content,
               c.create_time
        FROM b_comment c INNER JOIN b_user u ON c.from_uid = u.id
        WHERE c.is_check = 1
        ORDER BY c.create_time DESC
        LIMIT 5
    </select>

    <select id="selectCommentCountByTypeId" resultType="com.wuyun.model.vo.CommentCountVO">
        SELECT type_id as id,
               COUNT(*) AS comment_count
        FROM b_comment
        WHERE comment_type=#{commentType}
        AND type_id IN
        <foreach open="(" collection="typeIdList" item="typeId" separator="," close=")">
            #{typeId}
        </foreach>
        GROUP BY type_id
    </select>

    <select id="selectCommentIdByParentId" resultType="java.lang.Integer">
        SELECT id
        FROM b_comment
        WHERE parent_id = #{parentId}
    </select>

    <select id="selectParentComment" resultType="com.wuyun.model.vo.CommentVO">
        SELECT c.id,
               c.from_uid,
               u.nickname AS fromNickname,
               u.web_site,
               u.avatar,
               c.comment_content,
               c.create_time
        FROM b_comment c
        INNER JOIN b_user u ON c.from_uid = u.id
        <where>
            <if test="condition.typeId != null">
                type_id = #{condition.typeId}
            </if>
            AND comment_type= #{condition.commentType}
            AND c.is_check = 1
            AND parent_id IS NULL
        </where>
        ORDER BY c.id DESC
        LIMIT #{limit},#{size}
    </select>

    <select id="selectReplyByParentIdList" resultType="com.wuyun.model.vo.ReplyVO">
        SELECT *
        FROM ( SELECT c.from_uid,
                      u.nickname AS from_nickname,
                      u.avatar,
                      c.to_uid,
                      r.nickname AS to_nickname,
                      c.id,
                      c.parent_id,
                      c.comment_content,
                      c.create_time,
                      ROW_NUMBER() over (PARTITION BY parent_id ORDER BY create_time ASC ) row_num
                      FROM b_comment c JOIN b_user u ON c.from_uid = u.id
                                       JOIN b_user r ON c.to_uid = r.id
                      WHERE c.is_check = 1
                      AND parent_id IN
                      <foreach collection="parentCommentIdList" open="(" close=")" item="commentId" separator=",">
                          #{commentId}
                      </foreach>
             ) t
        WHERE 4 > row_num
    </select>

    <select id="selectReplyCountByParentId" resultType="com.wuyun.model.vo.ReplyCountVO">
        SELECT parent_id as comment_id,
               count(1) AS reply_count
        FROM b_comment
        WHERE is_check = 1
        AND parent_id IN
        <foreach collection="parentCommentIdList" open="(" close=")" item="commentId" separator=",">
            #{commentId}
        </foreach>
        GROUP BY parent_id
    </select>

    <select id="selectReplyByParentId" resultType="com.wuyun.model.vo.ReplyVO">
        SELECT c.from_uid,
               u.nickname AS from_nickname,
               u.avatar,
               c.to_uid,
               r.nickname as to_nickname,
               c.id,
               c.parent_id,
               c.comment_content,
               c.create_time
        FROM b_comment c
                 JOIN b_user u ON c.from_uid = u.id
                 JOIN b_user r ON c.to_uid = r.id
        WHERE c.is_check = 1
          AND parent_id = #{commentId}
        ORDER BY c.id ASC
        LIMIT #{limit}, #{size}
    </select>
</mapper>
